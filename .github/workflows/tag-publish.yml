name: Bump, Tag, and Publish
# The purpose of the workflow is to:
#  1. Bump the version number and tag the release
#  2. Build and publish the client to Artifactory
#
# When run on merge to master, it tags and bumps the patch version by default. You can
# bump other parts of the version by putting #major, #minor, or #patch in your commit
# message.
#
# When run on a hotfix branch, it tags and generates the hotfix version
#
# When run manually, you can specify the part of the semantic version to bump
#
# The workflow relies on github secrets:
# - ARTIFACTORY_PASSWORD - password for publishing the client to artifactory
# - ARTIFACTORY_USERNAME - username for publishing the client to artifactory
# - BROADBOT_TOKEN - the broadbot token, so we can avoid two reviewer rule on GHA operations
on:
  push:
    branches: [ master ]
    paths-ignore: [ '**.md', '.github/**' ]
  workflow_dispatch:
    inputs:
      bump:
        description: 'Part of the semantic version to bump'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      branch:
        description: 'Branch to run the workflow on'
        required: false
        default: master

env:
  SERVICE_NAME: ${{ github.event.repository.name }}
  GOOGLE_PROJECT: terra-kernel-k8s
  GKE_CLUSTER: terra-kernel-k8s

jobs:
  tag-publish-job:
    runs-on: ubuntu-latest
    steps:
      - name: Set part of semantic version to bump
        id: controls
        run: |
          SEMVER_PART=""
          CHECKOUT_BRANCH="$GITHUB_REF"
          if ${{github.event_name == 'push' }}; then
            SEMVER_PART="patch"
          elif ${{github.event_name == 'workflow_dispatch' }}; then
            SEMVER_PART=${{ github.event.inputs.bump }}
            CHECKOUT_BRANCH=${{ github.event.inputs.branch }}
          fi
          echo ::set-output name=semver-part::$SEMVER_PART
          echo ::set-output name=checkout-branch::$CHECKOUT_BRANCH
      - name: Checkout current code
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.controls.outputs.checkout-branch }}
          token: ${{ secrets.BROADBOT_TOKEN }}
      - name: Skip version bump merges
        id: skiptest
        uses: ./.github/actions/bump-skip
        with:
          event-name: ${{ github.event_name }}
      - name: Bump the tag to a new version
        if: steps.skiptest.outputs.is-bump == 'no'
        uses: databiosphere/github-actions/actions/bumper@bumper-0.0.6
        id: tag
        env:
          DEFAULT_BUMP: patch
          GITHUB_TOKEN: ${{ secrets.BROADBOT_TOKEN }}
          HOTFIX_BRANCHES: hotfix.*
          OVERRIDE_BUMP: ${{ steps.controls.outputs.semver-part }}
          RELEASE_BRANCHES: master
          VERSION_FILE_PATH: settings.gradle
          VERSION_LINE_MATCH: "^gradle.ext.crlVersion\\s*=\\s*\".*\""
          VERSION_SUFFIX: SNAPSHOT
      - name: Set up JDK 17
        if: steps.skiptest.outputs.is-bump == 'no'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Cache Gradle packages
        if: steps.skiptest.outputs.is-bump == 'no'
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}
      - name: Grant execute permission for gradlew
        if: steps.skiptest.outputs.is-bump == 'no'
        run: chmod +x gradlew
      - name: Publish to Artifactory
        if: steps.skiptest.outputs.is-bump == 'no'
        run: ./gradlew artifactoryPublish --scan
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
          ARTIFACTORY_REPO_KEY: libs-snapshot-local
