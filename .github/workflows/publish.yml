name: Publish package to Artifactory
on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      publications:
        description: >
          Comma-separated list of subprojects to be published. Each one should have its version bumped;
          i.e. we can't publish already-published artifacts. `platform` should always be included.
        type: string
        required: true
env:
  VAULT_ADDR: https://clotho.broadinstitute.org:8200
  ARTIFACTORY_ACCOUNT_PATH: secret/dsp/accts/artifactory/dsdejenkins
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up AdoptOpenJDK 11
        uses: joschi/setup-jdk@v2
        with:
          java-version: 11
      - name: Pull Vault image
        run: docker pull vault:1.1.0
      # Currently, there's no way to add capabilities to Docker actions on Git, and Vault needs IPC_LOCK to run.
      - name: Get Vault token
        id: vault-token-step
        run: |
          VAULT_TOKEN=$(docker run --rm --cap-add IPC_LOCK \
            -e "VAULT_ADDR=${VAULT_ADDR}" \
            vault:1.1.0 \
            vault write -field token \
              auth/approle/login role_id=${{ secrets.VAULT_APPROLE_ROLE_ID }} \
              secret_id=${{ secrets.VAULT_APPROLE_SECRET_ID }})
          echo ::set-output name=vault-token::$VAULT_TOKEN
          echo ::add-mask::$VAULT_TOKEN
      - name: Get artifactory credentials from Vault
        id: vault-secret-step
        run: |
          ARTIFACTORY_USERNAME=$(docker run --rm --cap-add IPC_LOCK \
            -e "VAULT_TOKEN=${{ steps.vault-token-step.outputs.vault-token }}" \
            -e "VAULT_ADDR=${VAULT_ADDR}" \
            vault:1.1.0 \
            vault read -field username ${ARTIFACTORY_ACCOUNT_PATH})
          ARTIFACTORY_PASSWORD=$(docker run --rm --cap-add IPC_LOCK \
            -e "VAULT_TOKEN=${{ steps.vault-token-step.outputs.vault-token }}" \
            -e "VAULT_ADDR=${VAULT_ADDR}" \
            vault:1.1.0 \
            vault read -field password ${ARTIFACTORY_ACCOUNT_PATH})
          echo ::set-output name=artifactory-username::$ARTIFACTORY_USERNAME
          echo ::add-mask::$ARTIFACTORY_USERNAME
          echo ::set-output name=artifactory-password::$ARTIFACTORY_PASSWORD
          echo ::add-mask::$ARTIFACTORY_PASSWORD
      # See https://github.com/actions/cache/blob/main/examples.md#java---gradle
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Publish packages
        run: ./gradlew artifactoryPublish
        env:
          ARTIFACTORY_USERNAME: ${{ steps.vault-secret-step.outputs.artifactory-username }}
          ARTIFACTORY_PASSWORD: ${{ steps.vault-secret-step.outputs.artifactory-password }}
          ARTIFACTORY_REPO_KEY: libs-release-local
          ARTIFACTORY_PUBLICATIONS: ${{ github.event.inputs.publications }}
