plugins {
    id 'com.diffplug.spotless' version '6.3.0'
    id 'com.jfrog.artifactory' version '4.28.1'
    id 'idea'
    id 'java-library'
    id 'java-test-fixtures'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    google()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
}

group = 'bio.terra'
sourceCompatibility = JavaVersion.VERSION_11

configurations {
    testImplementation.extendsFrom testFixturesImplementation
}

dependencies {
    // Google dependencies - make sure we are using -jre and not android and use common bom
    constraints {
        implementation 'com.google.guava:guava:31.1-jre' // "-jre" for Java 8 or higher
        testFixturesImplementation 'com.google.guava:guava:31.1-jre' // "-jre" for Java 8 or higher
    }

    ext {
        janitorclient = '0.114.0-SNAPSHOT'
    }

    annotationProcessor group: 'com.google.auto.value', name: 'auto-value', version: '1.7.3'

    api group: 'com.azure', name: 'azure-core', version: '1.24.1'
    api group: 'com.azure', name: 'azure-identity', version: '1.4.3'
    api group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-compute', version: '2.15.0'
    api group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-containerinstance', version: '2.15.0'
    api group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-msi', version: '2.15.0'
    api group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-relay', version: '1.0.0-beta.1'
    api group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-resources', version: '2.15.0'
    api group: 'com.google.apis', name: 'google-api-services-bigquery', version: 'v2-rev20201030-1.30.10'
    api group: 'com.google.apis', name: 'google-api-services-cloudresourcemanager', version: 'v3-rev20210411-1.31.0'
    api group: 'com.google.apis', name: 'google-api-services-compute', version: 'v1-rev20220224-1.32.1'
    api group: 'com.google.apis', name: 'google-api-services-dns', version: 'v2-rev20220217-1.32.1'
    api group: 'com.google.apis', name: 'google-api-services-iam', version: 'v1-rev20220217-1.32.1'
    api group: 'com.google.apis', name: 'google-api-services-notebooks', version: 'v1-rev20220125-1.32.1'
    api group: 'com.google.apis', name: 'google-api-services-serviceusage', version: 'v1beta1-rev20210806-1.32.1'
    api group: 'com.google.auth', name: 'google-auth-library-oauth2-http'
    api group: 'com.google.cloud', name: 'google-cloud-billing', version: '1.1.17'
    api group: 'com.google.cloud', name: 'google-cloud-core-http'
    api group: 'com.google.cloud', name: 'google-cloud-storage', version: '1.108.0'
    api group: 'com.google.guava', name: 'guava'

    implementation group: 'bio.terra', name: 'terra-resource-janitor-client', version: janitorclient
    implementation group: 'com.diffplug.spotless', name: 'spotless-plugin-gradle', version: '6.3.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.3'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.12.3'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.12.3'
    implementation group: 'com.google.auto.value', name: 'auto-value-annotations', version: '1.7.3'
    implementation group: 'com.google.cloud', name: 'google-cloud-pubsub'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation group: 'io.opencensus', name: 'opencensus-api', version: '0.28.3'
    implementation group: 'io.opencensus', name: 'opencensus-impl', version: '0.28.3'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.28'
    implementation platform('com.google.cloud:libraries-bom:25.1.0')

    testFixturesImplementation group: 'bio.terra', name: 'terra-resource-janitor-client', version: janitorclient
    testFixturesImplementation group: 'com.azure', name: 'azure-core', version: '1.24.1'
    testFixturesImplementation group: 'com.azure.resourcemanager', name: 'azure-resourcemanager-resources', version: '2.10.0'
    testFixturesImplementation group: 'junit', name: 'junit', version: '4.13'
    testFixturesImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.2'
    testFixturesImplementation group: 'org.mockito', name: 'mockito-core', version: '3.6.0'
    testFixturesImplementation platform('com.google.cloud:libraries-bom:25.1.0')

    testImplementation group: 'com.google.cloud', name: 'google-cloud-resourcemanager'
    testImplementation group: 'org.glassfish.jersey.core', name: 'jersey-client', version: "2.31"
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.6.0'
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30' // For simple logging during testing

    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.2'
}

dependencyLocking {
    lockAllConfigurations() // see https://docs.gradle.org/current/userguide/dependency_locking.html
}

processTestResources {
    // Include src/testFixtures/resources for integration test credentials.
    from("$projectDir/src/testFixtures/resources")
}

// Linter
spotless {
    java {
        googleJavaFormat()
        targetExclude "${buildDir}/**"
    }
}

build.dependsOn spotlessApply

// for Gradle Build Scans
if (hasProperty("buildScan")) {
    buildScan {
        termsOfServiceUrl = "https://gradle.com/terms-of-service"
        termsOfServiceAgree = "yes"
    }
}

// Modify the standard :test task to only include unit-tagged tests.
test {
    useJUnitPlatform {
        includeTags 'unit'
    }
}

// Create a new :integrationTest task to run integration tests. This won't be executed as
// part of the standard `./gradlew build` invocation.
task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags "integration"
    }
    shouldRunAfter test
    // Force tests to always be re-run, since integration tests involve communicating with external
    // resources.
    outputs.upToDateWhen { false }
}

java {
    // Builds Javadoc into the published package as part of the 'assemble' task.
    withJavadocJar()
    // Builds sources into the published package as part of the 'assemble' task.
    withSourcesJar()
}

// Enforce that 'git secrets' is correctly installed and configured on the
// current cloned git repo.
task minniekenny(type: Exec) {
    commandLine 'sh', file('minnie-kenny.sh')
}

test.dependsOn minniekenny

def artifactory_repo_key = System.getenv("ARTIFACTORY_REPO_KEY") != null ? System.getenv("ARTIFACTORY_REPO_KEY") : 'libs-snapshot-local'
def artifactory_username = System.getenv('ARTIFACTORY_USERNAME')
def artifactory_password = System.getenv('ARTIFACTORY_PASSWORD')

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(artifactoryPublish) &&
            (artifactory_username == null || artifactory_password == null)) {
        throw new GradleException("Set env vars ARTIFACTORY_USERNAME and ARTIFACTORY_PASSWORD to publish")
    }
}

// Upload Maven artifacts to Artifactory using the Artifcatory plugin.
artifactory {
    publish {
        contextUrl = 'https://broadinstitute.jfrog.io/broadinstitute/'
        repository {
            repoKey = "${artifactory_repo_key}"
            username = "${artifactory_username}"
            password = "${artifactory_password}"
        }
        defaults {
            publications('terraCloudResourceLib')
            publishArtifacts = true
            publishPom = true
        }
    }
}

// Publish jar file to a Maven module/artifact using the maven-publish plugin.
publishing {
    publications {
        terraCloudResourceLib(MavenPublication) {
            version = gradle.crlVersion
            artifactId = rootProject.name
            from components.java
        }
    }
}
