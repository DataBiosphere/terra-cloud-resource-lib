buildscript {
    // This is all for the artifactory plugin
    repositories {
        jcenter()
    }
    dependencies {
        classpath group: 'com.jfrog.artifactory', name: 'com.jfrog.artifactory.gradle.plugin', version: '4.13.0', ext: 'pom'
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.artifactory' version '4.13.0'
}

group 'bio.terra'
version '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

def artifactory_username = System.getenv('ARTIFACTORY_USERNAME')
def artifactory_password = System.getenv('ARTIFACTORY_PASSWORD')

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(artifactoryPublish) &&
            (artifactory_username == null || artifactory_password == null)) {
        throw new GradleException("Set env vars ARTIFACTORY_USERNAME and ARTIFACTORY_PASSWORD to publish")
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // this is just a random dependency added to make sure I am doing it right, remove when we have a real one
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.2'
}

test {
    useJUnitPlatform {
        includeTags 'unit'
    }
}

java {
    withJavadocJar()
}

publishing {
    publications {
        terraCloudResourceLibrary(MavenPublication) {
            from components.java
        }
    }
}

artifactory {
    publish {
        contextUrl = 'https://broadinstitute.jfrog.io/broadinstitute/'
        repository {
            repoKey = 'libs-snapshot-local' // The Artifactory repository key to publish to
            username = "${artifactory_username}" // The publisher user name
            password = "${artifactory_password}" // The publisher password
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('terraCloudResourceLibrary')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            // properties = ['qa.level': 'basic', 'dev.team' : 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}

task minniekenny(type: Exec) {
    commandLine "./minnie-kenny.sh"
}

test.dependsOn minniekenny