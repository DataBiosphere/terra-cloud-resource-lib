buildscript {
    // This is all for the artifactory plugin
    repositories {
        jcenter()
    }
    dependencies {
        classpath group: 'com.jfrog.artifactory', name: 'com.jfrog.artifactory.gradle.plugin', version: '4.13.0', ext: 'pom'
    }
}

plugins {
    id 'java-library'
    id 'java-test-fixtures'
    id 'maven-publish'
    id 'com.jfrog.artifactory' version '4.13.0'
    id 'com.diffplug.gradle.spotless' version '3.27.2'
    id 'org.openapi.generator' version '4.3.1'
}

subprojects { subproject ->
    repositories {
        mavenCentral()
        google()
        maven {
            url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
        }
    }

    apply plugin: 'idea'
    apply plugin: 'java-library'
    apply plugin: 'java-test-fixtures'
    apply plugin: 'com.diffplug.gradle.spotless'

    dependencies {
        api 'com.google.auth:google-auth-library-oauth2-http:0.20.0'
        api 'com.google.cloud:google-cloud-core-http:1.93.5'

        implementation 'org.slf4j:slf4j-api:1.7.28'
        implementation 'com.google.code.gson:gson:2.8.6'
        api("com.google.guava:guava:29.0-jre")

        implementation group: 'bio.terra.janitor', name: 'terra-resource-janitor-client', version: '0.0.2-SNAPSHOT'

        testImplementation "org.mockito:mockito-core:2.+"
        testImplementation 'junit:junit:4.13'
        testFixturesImplementation 'junit:junit:4.13'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
        testFixturesImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
        testImplementation 'org.hamcrest:hamcrest:2.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
        testImplementation group: 'org.glassfish.jersey.core', name: 'jersey-client', version: "2.31"

        testImplementation(testFixtures(project(':common')))
    }

    processTestResources {
        // Include common/testFixtures/resources for integration test credentials.
        from("${project(':common:').projectDir}/testFixtures/resources")
    }

    // Linter
    spotless {
        java {
            googleJavaFormat()
        }
    }

    test {
        useJUnitPlatform {
            includeTags 'unit'
        }
    }

    def integrationTest = tasks.register("integrationTest", Test) {
        useJUnitPlatform {
            includeTags "integration"
        }
        shouldRunAfter test
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        withJavadocJar()
    }

    task minniekenny(type: Exec) {
        commandLine 'sh', '../minnie-kenny.sh'
    }

    test.dependsOn minniekenny

    publishing {
        publications {
            "$subproject.name"(MavenPublication) {
                groupId subproject.group
                artifactId subproject.name
                version subproject.version
                from components.java
                suppressPomMetadataWarningsFor('testFixturesApiElements')
                suppressPomMetadataWarningsFor('testFixturesApiRuntimeElements')
            }
        }
    }
}

def artifactory_username = System.getenv('ARTIFACTORY_USERNAME')
def artifactory_password = System.getenv('ARTIFACTORY_PASSWORD')

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(artifactoryPublish) &&
            (artifactory_username == null || artifactory_password == null)) {
        throw new GradleException("Set env vars ARTIFACTORY_USERNAME and ARTIFACTORY_PASSWORD to publish")
    }
}

artifactory {
    publish {
        contextUrl = 'https://broadinstitute.jfrog.io/broadinstitute/'
        repository {
            repoKey = 'libs-snapshot-local'
            username = "${artifactory_username}"
            password = "${artifactory_password}"
        }
        defaults {
            publications('cloud-resource-schema', 'google-bigquery', 'google-storage')
        }
    }
}
