import java.util.stream.Collectors

plugins {
    id 'idea'
    id 'maven-publish'

    id 'com.jfrog.artifactory' version '4.27.1'
}

def artifactory_repo_key = System.getenv("ARTIFACTORY_REPO_KEY") != null ? System.getenv("ARTIFACTORY_REPO_KEY") : 'libs-snapshot-local'
def artifactory_username = System.getenv('ARTIFACTORY_USERNAME')
def artifactory_password = System.getenv('ARTIFACTORY_PASSWORD')
def artifactory_publications = System.getenv('ARTIFACTORY_PUBLICATIONS') == null
        ? null
        : Arrays.stream(System.getenv('ARTIFACTORY_PASSWORD').split(","))
            .map({s -> s.trim()})
            .collect(Collectors.toList())

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(artifactoryPublish) &&
            (artifactory_username == null
                    || artifactory_password == null
                    || artifactory_publications == null)) {
        throw new GradleException("Set env vars ARTIFACTORY_USERNAME, ARTIFACTORY_PASSWORD,"
                + " and ARTIFACTORY_PUBLICATIONS to publish")
    }
}

artifactory {
    publish {
        contextUrl = 'https://broadinstitute.jfrog.io/broadinstitute/'
        repository {
            repoKey = "${artifactory_repo_key}"
            username = "${artifactory_username}"
            password = "${artifactory_password}"
        }
        defaults {
            publications(artifactory_publications)
        }
    }
}
